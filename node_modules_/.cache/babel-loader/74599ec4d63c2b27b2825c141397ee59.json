{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/react/vtour/base/src/context/DataContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n\n  // const EscenaInicial =   {idEscena :    \" ../../standalone/pannellum.htm?config=../tour2.json\"    };\n  const EscenaInicial = {\n    idEscena: \"../../standalone/pannellum.htm?config=../tour1.json\"\n  }; //const EscenaInicial =   {idEscena :    \" ../../../tour2.json\"    };\n\n  const conjuntoEscenasInicial = [];\n  const cantidadInicial = 0; // const escenario = {}\n  //const RecorridoInicial = {        idRecorrido:  \"../../standalone/pannellum.htm?config=../tour1.json\"    };\n\n  const RecorridoInicial = {};\n  const [escena, setEscena] = useState(EscenaInicial);\n  const [conjuntoEscenas, setConjuntoEscenas] = useState(conjuntoEscenasInicial);\n  const [recorrido, setRecorrido] = useState(RecorridoInicial);\n  const [cantidad, setCantidad] = useState(cantidadInicial);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      escena,\n      setEscena,\n      conjuntoEscenas,\n      setConjuntoEscenas,\n      recorrido,\n      setRecorrido,\n      cantidad,\n      setCantidad\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DataProvider, \"72RZTcNLBEXmUaQhuz1X54tWB3Q=\");\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/home/marcelo/react/vtour/base/src/context/DataContext.js"],"names":["React","createContext","useState","DataContext","DataProvider","children","EscenaInicial","idEscena","conjuntoEscenasInicial","cantidadInicial","RecorridoInicial","escena","setEscena","conjuntoEscenas","setConjuntoEscenas","recorrido","setRecorrido","cantidad","setCantidad"],"mappings":";;;AAAA,OAAQA,KAAR,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AACA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAGP,OAAO,MAAMG,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAEzC;AACA,QAAMC,aAAa,GAAK;AAACC,IAAAA,QAAQ,EAAM;AAAf,GAAxB,CAHyC,CAIzC;;AACC,QAAMC,sBAAsB,GAAG,EAA/B;AACA,QAAMC,eAAe,GAAG,CAAxB,CANwC,CAOzC;AACC;;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAAEI,aAAF,CAAnC;AACA,QAAM,CAACO,eAAD,EAAiBC,kBAAjB,IAAsCZ,QAAQ,CAACM,sBAAD,CAApD;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAA2Bd,QAAQ,CAAEQ,gBAAF,CAAzC;AACA,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAwBhB,QAAQ,CAAEO,eAAF,CAAtC;AAEA,sBACQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EACxB;AAAEE,MAAAA,MAAF;AAASC,MAAAA,SAAT;AACAC,MAAAA,eADA;AACgBC,MAAAA,kBADhB;AAEAC,MAAAA,SAFA;AAEUC,MAAAA,YAFV;AAGHC,MAAAA,QAHG;AAGMC,MAAAA;AAHN,KADH;AAAA,cAMab;AANb;AAAA;AAAA;AAAA;AAAA,UADR;AAWH,CA1BM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import  React, {createContext, useState}  from 'react';\nexport const DataContext = createContext();\n\n\nexport const DataProvider = ({children}) => {\n\n   // const EscenaInicial =   {idEscena :    \" ../../standalone/pannellum.htm?config=../tour2.json\"    };\n   const EscenaInicial =   {idEscena :    \"../../standalone/pannellum.htm?config=../tour1.json\"    };\n   //const EscenaInicial =   {idEscena :    \" ../../../tour2.json\"    };\n    const conjuntoEscenasInicial = [];\n    const cantidadInicial = 0;\n   // const escenario = {}\n    //const RecorridoInicial = {        idRecorrido:  \"../../standalone/pannellum.htm?config=../tour1.json\"    };\n    const RecorridoInicial = {};\n    const [escena,setEscena] = useState (EscenaInicial);\n    const [conjuntoEscenas,setConjuntoEscenas]= useState(conjuntoEscenasInicial);\n    const [recorrido,setRecorrido] = useState (RecorridoInicial);\n    const [cantidad,setCantidad] =useState (cantidadInicial);\n\n    return (\n            <DataContext.Provider value={\n               { escena,setEscena ,\n               conjuntoEscenas,setConjuntoEscenas,\n               recorrido,setRecorrido,\n            cantidad,setCantidad}\n            }>\n                        {children}\n            </DataContext.Provider>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}