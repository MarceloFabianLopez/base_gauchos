{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/react/vtour/base/src/components/propios/FrameBase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport IconoRecorrido from './IconoRecorrido';\nimport IconoAerea from './IconoAerea';\nimport IconoVideo360 from './IconoVideo360';\nimport styled from \"styled-components\"; //import { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\n\nimport VideoPlayer from 'components/propios/VideoPlayer'; //import { ReactComponent as VrIcon } from \"feather-icons/dist/icons/nuevovr.svg\";\n\nimport { DataContext } from 'context/DataContext'; //import Botonera from 'components/propios/Botonera';\n//import Datos from 'components/propios/Datos';\n//import { DataProvider } from './context/DataContext';\n//import ReactPannellum, { getConfig ,getViewer,getAllScenes,addScene, loadScene, lookAt} from \"react-pannellum\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = styled.div({\n  \"position\": \"relative\",\n  \"top\": \"0\",\n  \"--bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(255, 255, 255, var(--bg-opacity))\",\n  \"marginLeft\": \"auto\",\n  \"marginRight\": \"auto\",\n  \"maxWidth\": \"100%\",\n  \"padding\": \"1.25rem\",\n  \"@media (min-width: 768px)\": {\n    \"maxWidth\": \"100%\"\n  },\n  \"@media (min-width: 1024px)\": {\n    \"maxWidth\": \"100%\"\n  },\n  \"@media (min-width: 1280px)\": {\n    \"marginLeft\": \"auto\",\n    \"marginRight\": \"0\",\n    \"maxWidth\": \"100%\"\n  }\n});\n/* const CardImage = styled.div(props => [\n  `background-image: url(\"${props.imageSrc}\");`,\n  tw`h-80 bg-cover bg-center rounded-2xl`\n]);\n */\n//const CardText = tw.div`mt-0 p-4`;\n\n_c = Card;\nconst CardHeader = styled.div({\n  \"--bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(0, 0, 0, var(--bg-opacity))\"\n});\n_c2 = CardHeader;\nconst CardCompany = styled.div({\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(100, 21, 255, var(--text-opacity))\",\n  \"fontWeight\": \"700\",\n  \"fontSize\": \"1.125rem\"\n});\n_c3 = CardCompany;\nconst CardType = styled.div({\n  \"fontWeight\": \"600\",\n  \"fontSize\": \"0.875rem\",\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(113, 128, 150, var(--text-opacity))\",\n  \"textAlign\": \"right\"\n});\n_c4 = CardType;\nconst CardTitle = styled.h5({\n  \"fontSize\": \"1.25rem\",\n  \"marginTop\": \"0.5rem\",\n  \"fontWeight\": \"700\"\n});\n_c5 = CardTitle;\nconst CardMeta = styled.div`\n  ${{\n  \"display\": \"flex\",\n  \"flexDirection\": \"row\",\n  \"flexWrap\": \"wrap\",\n  \"justifyContent\": \"center\",\n  \"fontWeight\": \"600\",\n  \"letterSpacing\": \"0.025em\",\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(113, 128, 150, var(--text-opacity))\",\n  \"textTransform\": \"uppercase\",\n  \"fontSize\": \"0.75rem\",\n  \"@media (min-width: 640px)\": {\n    \"alignItems\": \"center\"\n  }\n}}\n`;\n_c6 = CardMeta;\nconst CardMetaFeature = styled.div`\n  ${{\n  \"display\": \"flex\",\n  \"alignItems\": \"center\",\n  \"marginTop\": \"1rem\",\n  \"marginRight\": \"1rem\",\n  \":last-child\": {\n    \"marginRight\": \"0\"\n  }\n}}\n  svg {\n    ${{\n  \"width\": \"1.25rem\",\n  \"height\": \"1.25rem\",\n  \"marginRight\": \"0.25rem\"\n}}\n  }\n`; //const CardAction = tw(PrimaryButtonBase)`w-full mt-6`;\n//const TituloPrimary = tw.div`text-primary-500 font-bold text-lg`;\n\n/* const cards = [\n    {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1563461660947-507ef49e9c47?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=768&q=80\",\n      company: \"Recorridos 360º\",\n      type: \"Recorrido virtual\",\n      title: \"Resalte puntos de interés\",\n      durationText: \"24hs para entrega\",\n      locationText: \"Zona Gran La Plata\"\n    },\n     {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1573165231977-3f0e27806045?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=768&q=80\",\n      company: \"Video 360º\",\n      type: \"Experiencia inmersiva\",\n      title: \"La sensación de estar en el lugar\",\n      durationText: \"24 hs para entrega\",\n      locationText: \"Apto visores Realidad Virtual\"\n    } \n     ,\n     {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1573165231977-3f0e27806045?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=768&q=80\",\n      company: \"Aéreos\",\n      type: \"Tenga una nueva perspectiva\",\n      title: \"Imprescindible\",\n      durationText: \"24 hs para entrega\",\n      locationText: \"Consultar zonas\"\n    }  \n  ];\n */\n\n_c7 = CardMetaFeature;\nconst IconoReco = styled.div({\n  \"position\": \"absolute\",\n  \"zIndex\": \"10\",\n  \"top\": \"0\",\n  \"right\": \"0\",\n  \"height\": \"4rem\",\n  \"width\": \"4rem\"\n}); //const PosicionImagen = tw.div`z-0 relative mt-0 `;\n// const EmbedContainer =tw.div`relative bg-green-300 w-full h-full overflow-hidden `;\n//const EembedContainerIframe =tw.div`absolute  bg-red-300 pb-2 top-0 ml-0  h-full     `;\n// TipoMedio puede ser Imagen, Video, Video360, Recorrido\n//const Escenario = tw.div`bg-gray-500 p-2 w-full`;\n\n/* function getIframe (){\n   document.getElementsById('mipannellum');\n}\n */\n//const proximaEscena=\"Entrada\";\n//const configPannellum = \"../tour1.json\";\n\n_c8 = IconoReco;\nconst Fondo = styled.div({\n  \"--bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(229, 62, 62, var(--bg-opacity))\",\n  \"padding\": \"1rem\",\n  \"--text-opacity\": \"1\",\n  \"color\": \"rgba(99, 179, 237, var(--text-opacity))\"\n}); //const {cantidad,setCantidad} = useContext(DataContext);\n\n_c9 = Fondo;\n\nfunction FrameBase({\n  source = \"\",\n  Titulo = \"Titulo\",\n  Bajada = \"Bajada\",\n  SubTitulo = \"Subtitulo\",\n  TextoGrisMayuscula = \"Texto en gris y mayusculas\",\n  IsVideo = false,\n  IsImagen = false,\n  IsRecorrido = false,\n  IsPlano = false,\n  videoJsOptions = {},\n  ImageAlt = \"imagen\",\n  sourceInicial = \"../../standalone/pannellum.htm?config=../tour2.json\"\n}) {\n  _s();\n\n  const {\n    cantidad,\n    setCantidad\n  } = useContext(DataContext); // const [archivo,setArchivo]  = useState('');\n\n  const [run, setRun] = useState(true);\n  const [counter, setCounter] = useState(-1); //const countRef = useRef(count);\n  //countRef.current = count;\n  // const [recorrido, setRecorrido] = useState([]);\n  //const {recorrido,setRecorrido} = useContext(DataContext);\n\n  const [conjuntoEscenas, setConjuntoEscenas] = useState([]);\n  const {\n    escena\n  } = useContext(DataContext);\n  const [huboUnCambio, setHuboUnCambio] = useState(false);\n  useEffect(() => {\n    // \n    // var myHeaders = new Headers();\n    //var myInit = { method: 'GET',\n    //         headers: myHeaders,\n    //       mode: 'cors',\n    //      cache: 'default' };\n    var sourceCorregido = \"../../\" + source.slice(38); //var myRequest = new Request(sourceCorregido, myInit);\n    //////console.log(\"useEffect recorrido\");\n    //console.log(\"sourceCorregido =\" ,sourceCorregido);\n    //console.log(\"source =\" ,source);\n    // fetch(\"../../../tour1.json\")\n    // fetch(myRequest)\n\n    fetch(sourceCorregido).then(res => res.json()).then(datos => {\n      //setRecorrido(datos);\n      setCounter(-1); //console.log(\"corregido=\",sourceCorregido);\n      //console.log('datos obtenidos=',datos);\n      // debugger;\n      //console.log(\"Recorrido=\",recorrido);\n\n      setConjuntoEscenas(Object.keys(datos[\"scenes\"]));\n      setCantidad(Object.keys(datos[\"scenes\"]).length);\n      setHuboUnCambio(true); //console.log(\"cantidad=\",cantidad);\n      //console.log(\"conjuntEscenas\",conjuntoEscenas);\n      //console.log(\"Object=\",Object.keys(datos[\"scenes\"]));\n      // setCounter(0);\n      // //console.log(\"escenas=\",conjuntoEscenas.length,\"counter=\",counter);\n    }).catch(function () {//  alert(\"eror de descarga\");\n      //console.log(\"cargando\");\n    });\n    return () => {//console.log(\"limpieza ussefect recorrido\");\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps \n  }, [escena, source]);\n  useEffect(() => {\n    function Navegacion() {\n      var ifrm = document.getElementById('mipannellum');\n      var miviewer = ifrm.contentWindow.viewer;\n\n      if (miviewer && conjuntoEscenas) {\n        //console.log(\"tengo viewer y conjuntoescenas\");\n        if (counter === -1) {\n          //console.log(\"inicioooooo\");\n          miviewer.loadScene(\"Ingreso\", 0, 0, 120, true);\n        } else {\n          //console.log(\"no es inicio\");\n          miviewer.loadScene(conjuntoEscenas[counter], 0, 0, 120, true);\n        }\n\n        miviewer.lookAt(-5, 0, 60, 4000);\n        miviewer.lookAt(0, 0, 120, 4000);\n      }\n    } // //console.log(\"useeffect run=\",run);\n\n\n    const lacuenta = setTimeout(() => setCounter(counter + 1), 3000);\n\n    if (run) {\n      Navegacion();\n    } // counter < (cantidad + 1) && lacuenta() ;\n    //console.log(\"counter useEffect=\",counter,\"cantidad=\",cantidad);\n\n\n    if (counter === cantidad) {\n      //console.log(\"reiniciando secuencia:\",counter); \n      setCounter(-1);\n    }\n\n    if (huboUnCambio) {\n      //console.log(\"hubo un cambio\");\n      setHuboUnCambio(false);\n    }\n\n    return () => {\n      //console.log(\"cleanup\");   \n      clearTimeout(lacuenta);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counter]);\n  /*  function verViewer (){\n  setCounter(counter-1);\n   } */\n\n  function Botonera() {\n    function handleClick(event) {\n      //alert('clicked');\n      // //console.log(\"botonera run=\",run);\n      if (run) {\n        setRun(false);\n      } else {\n        setRun(true);\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fondo, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: run ? \"Parar\" : \"Automático\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this); //console.log(\"counter en botonera=\",counter);\n  }\n\n  if (!source) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }, this);\n  } else {\n    const src = source; //setArchivo(source);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [IsVideo && /*#__PURE__*/_jsxDEV(IconoReco, {\n          children: /*#__PURE__*/_jsxDEV(IconoVideo360, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 39\n        }, this), IsRecorrido && /*#__PURE__*/_jsxDEV(IconoReco, {\n          children: /*#__PURE__*/_jsxDEV(IconoRecorrido, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 43\n        }, this), IsImagen && /*#__PURE__*/_jsxDEV(IconoReco, {\n          children: /*#__PURE__*/_jsxDEV(IconoAerea, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [IsVideo && /*#__PURE__*/_jsxDEV(VideoPlayer, { ...videoJsOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 46\n          }, this), IsRecorrido && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n              id: \"mipannellum\",\n              title: \"recorrido\",\n              width: \"100%\",\n              allowFullScreen: true,\n              src: src\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Botonera, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 37\n          }, this), IsImagen && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: source ? source : sourceInicial,\n            width: \"100%\",\n            alt: ImageAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this), !IsPlano && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CardCompany, {\n            children: Titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(CardType, {\n            children: Bajada\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: SubTitulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(CardMeta, {\n            children: /*#__PURE__*/_jsxDEV(CardMetaFeature, {\n              children: TextoGrisMayuscula\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(FrameBase, \"PRtC4v5m72O4fGateEWTsaWj1IY=\");\n\n_c10 = FrameBase;\n;\nexport default FrameBase;\n/* var pano = document.getElementById('pano').contentWindow; \nvar pitch = pano.config.pitch; \nvar yaw = pano.config.yaw; \nvar scene = pano.config.activeScene; \n\nwill allow you to read values; after changing a value \n(except activeScene), \nrun pano.animate(); */\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CardHeader\");\n$RefreshReg$(_c3, \"CardCompany\");\n$RefreshReg$(_c4, \"CardType\");\n$RefreshReg$(_c5, \"CardTitle\");\n$RefreshReg$(_c6, \"CardMeta\");\n$RefreshReg$(_c7, \"CardMetaFeature\");\n$RefreshReg$(_c8, \"IconoReco\");\n$RefreshReg$(_c9, \"Fondo\");\n$RefreshReg$(_c10, \"FrameBase\");","map":{"version":3,"sources":["/home/marcelo/react/vtour/base/src/components/propios/FrameBase.js"],"names":["React","useEffect","useContext","useState","IconoRecorrido","IconoAerea","IconoVideo360","styled","VideoPlayer","DataContext","Card","div","CardHeader","CardCompany","CardType","CardTitle","h5","CardMeta","CardMetaFeature","IconoReco","Fondo","FrameBase","source","Titulo","Bajada","SubTitulo","TextoGrisMayuscula","IsVideo","IsImagen","IsRecorrido","IsPlano","videoJsOptions","ImageAlt","sourceInicial","cantidad","setCantidad","run","setRun","counter","setCounter","conjuntoEscenas","setConjuntoEscenas","escena","huboUnCambio","setHuboUnCambio","sourceCorregido","slice","fetch","then","res","json","datos","Object","keys","length","catch","Navegacion","ifrm","document","getElementById","miviewer","contentWindow","viewer","loadScene","lookAt","lacuenta","setTimeout","clearTimeout","Botonera","handleClick","event","preventDefault","stopPropagation","src"],"mappings":"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","sourcesContent":["import React, { useEffect,useContext,useState } from 'react';\nimport tw from \"twin.macro\";\nimport IconoRecorrido from './IconoRecorrido';\nimport IconoAerea from './IconoAerea';\nimport IconoVideo360 from './IconoVideo360';\nimport styled from \"styled-components\";\n//import { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\nimport VideoPlayer from 'components/propios/VideoPlayer';\n\n\n//import { ReactComponent as VrIcon } from \"feather-icons/dist/icons/nuevovr.svg\";\nimport { DataContext } from 'context/DataContext';\n//import Botonera from 'components/propios/Botonera';\n//import Datos from 'components/propios/Datos';\n\n//import { DataProvider } from './context/DataContext';\n\n//import ReactPannellum, { getConfig ,getViewer,getAllScenes,addScene, loadScene, lookAt} from \"react-pannellum\";\n\n\n\nconst Card = tw.div`relative top-0  bg-white  mx-auto xl:mx-0 xl:ml-auto max-w-full md:max-w-full  lg:max-w-full xl:max-w-full p-5 `;\n/* const CardImage = styled.div(props => [\n  `background-image: url(\"${props.imageSrc}\");`,\n  tw`h-80 bg-cover bg-center rounded-2xl`\n]);\n */\n//const CardText = tw.div`mt-0 p-4`;\n\nconst CardHeader = tw.div` bg-black `;\nconst CardCompany = tw.div`text-primary-500 font-bold text-lg`;\nconst CardType = tw.div`font-semibold text-sm text-gray-600 text-right `;\nconst CardTitle = tw.h5`text-xl mt-2 font-bold`;\n\nconst CardMeta = styled.div`\n  ${tw`flex flex-row flex-wrap justify-center sm:items-center font-semibold tracking-wide text-gray-600 uppercase text-xs`}\n`;\nconst CardMetaFeature = styled.div`\n  ${tw`flex items-center mt-4 mr-4 last:mr-0`}\n  svg {\n    ${tw`w-5 h-5 mr-1`}\n  }\n`;\n//const CardAction = tw(PrimaryButtonBase)`w-full mt-6`;\n//const TituloPrimary = tw.div`text-primary-500 font-bold text-lg`;\n/* const cards = [\n    {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1563461660947-507ef49e9c47?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=768&q=80\",\n      company: \"Recorridos 360º\",\n      type: \"Recorrido virtual\",\n      title: \"Resalte puntos de interés\",\n      durationText: \"24hs para entrega\",\n      locationText: \"Zona Gran La Plata\"\n    },\n     {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1573165231977-3f0e27806045?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=768&q=80\",\n      company: \"Video 360º\",\n      type: \"Experiencia inmersiva\",\n      title: \"La sensación de estar en el lugar\",\n      durationText: \"24 hs para entrega\",\n      locationText: \"Apto visores Realidad Virtual\"\n    } \n     ,\n     {\n      imageSrc:\n        \"https://images.unsplash.com/photo-1573165231977-3f0e27806045?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=768&q=80\",\n      company: \"Aéreos\",\n      type: \"Tenga una nueva perspectiva\",\n      title: \"Imprescindible\",\n      durationText: \"24 hs para entrega\",\n      locationText: \"Consultar zonas\"\n    }  \n  ];\n */  const IconoReco = tw.div`absolute  z-10 top-0 right-0 h-16 w-16 `;\n  //const PosicionImagen = tw.div`z-0 relative mt-0 `;\n // const EmbedContainer =tw.div`relative bg-green-300 w-full h-full overflow-hidden `;\n  \n  //const EembedContainerIframe =tw.div`absolute  bg-red-300 pb-2 top-0 ml-0  h-full     `;\n\n\n// TipoMedio puede ser Imagen, Video, Video360, Recorrido\n//const Escenario = tw.div`bg-gray-500 p-2 w-full`;\n\n\n/* function getIframe (){\n   document.getElementsById('mipannellum');\n}\n */\n\n\n//const proximaEscena=\"Entrada\";\n\n//const configPannellum = \"../tour1.json\";\n\n\n\nconst Fondo=tw.div`bg-red-600 p-4 text-blue-400`; \n\n//const {cantidad,setCantidad} = useContext(DataContext);\n\n  function FrameBase ({ source=\"\" , Titulo=\"Titulo\", Bajada=\"Bajada\", SubTitulo=\"Subtitulo\",TextoGrisMayuscula=\"Texto en gris y mayusculas\",\n    \n                      IsVideo=false, IsImagen=false, IsRecorrido=false, IsPlano=false,videoJsOptions={},ImageAlt=\"imagen\" ,sourceInicial=\"../../standalone/pannellum.htm?config=../tour2.json\"}) \n\n\n{\n  \n  const {cantidad,setCantidad} = useContext(DataContext);\n // const [archivo,setArchivo]  = useState('');\n  const [run, setRun] = useState(true);\n  const [counter, setCounter] = useState(-1);\n  //const countRef = useRef(count);\n  //countRef.current = count;\n // const [recorrido, setRecorrido] = useState([]);\n //const {recorrido,setRecorrido} = useContext(DataContext);\n  const [conjuntoEscenas,setConjuntoEscenas]=useState([]);\n  const {escena} = useContext (DataContext);\n  const [huboUnCambio, setHuboUnCambio]=useState(false);\n\n   \n\n  useEffect(() => {\n\n   // \n   // var myHeaders = new Headers();\n    //var myInit = { method: 'GET',\n      //         headers: myHeaders,\n        //       mode: 'cors',\n         //      cache: 'default' };\n         \nvar sourceCorregido=\"../../\" +source.slice(38);\n//var myRequest = new Request(sourceCorregido, myInit);\n                    //////console.log(\"useEffect recorrido\");\n                    //console.log(\"sourceCorregido =\" ,sourceCorregido);\n                    //console.log(\"source =\" ,source);\n                   // fetch(\"../../../tour1.json\")\n                   // fetch(myRequest)\n                   fetch(sourceCorregido)\n                               .then(res => res.json())\n                                                                .then(datos => {\n                                                                  //setRecorrido(datos);\n                                                                  setCounter(-1);\n                                                                  //console.log(\"corregido=\",sourceCorregido);\n                                                                  //console.log('datos obtenidos=',datos);\n                                                                     // debugger;\n                                                                  //console.log(\"Recorrido=\",recorrido);\n                                                                  setConjuntoEscenas(Object.keys(datos[\"scenes\"]\n                                                                  ));\n                                                                  setCantidad((Object.keys(datos[\"scenes\"]).length));\n                                                                  setHuboUnCambio(true);\n                                                                  //console.log(\"cantidad=\",cantidad);\n                                                                  //console.log(\"conjuntEscenas\",conjuntoEscenas);\n                                                                  //console.log(\"Object=\",Object.keys(datos[\"scenes\"]));\n                                                                 // setCounter(0);\n                                                                  \n                                                                 // //console.log(\"escenas=\",conjuntoEscenas.length,\"counter=\",counter);\n\n                                                                }\n                                      )\n                                      .catch(function() {\n                                      //  alert(\"eror de descarga\");\n                                        //console.log(\"cargando\");\n                                      }); \n\n                 return () => {\n                  //console.log(\"limpieza ussefect recorrido\");\n\n                }\n                 // eslint-disable-next-line react-hooks/exhaustive-deps \n                                    },[escena,source]);\n  \n\n\n    useEffect(() => {\n\n\n      function Navegacion(){\n  \n        var ifrm = document.getElementById('mipannellum')\n          var miviewer= ifrm.contentWindow.viewer\n        \n                  if(miviewer&&conjuntoEscenas){\n                    //console.log(\"tengo viewer y conjuntoescenas\");\n                    if (counter===-1){\n                      //console.log(\"inicioooooo\");\n                      miviewer.loadScene(\"Ingreso\",0,0,120,true)} else {\n                        //console.log(\"no es inicio\");\n                  miviewer.loadScene(conjuntoEscenas[counter],0,0,120,true)}\n                    miviewer.lookAt(-5,0,60,4000);\n                    miviewer.lookAt(0,0,120,4000);\n                }\n          }\n\n\n\n     // //console.log(\"useeffect run=\",run);\n     const   lacuenta =  setTimeout(() => setCounter(counter + 1), 3000);\n\n     if (run) { \n     Navegacion();\n     }\n     // counter < (cantidad + 1) && lacuenta() ;\n      //console.log(\"counter useEffect=\",counter,\"cantidad=\",cantidad);\n     \n     if (counter===(cantidad) ) {\n      //console.log(\"reiniciando secuencia:\",counter); \n\n      setCounter(-1);\n      \n      }\n      if (huboUnCambio){\n        //console.log(\"hubo un cambio\");\n        setHuboUnCambio(false);\n        \n      }\n      \n    \n    return() => {\n      //console.log(\"cleanup\");   \n      clearTimeout(lacuenta);}\n // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counter]);\n      \n\n\n\n /*  function verViewer (){\nsetCounter(counter-1);\n  } */\n\n  function  Botonera () {\n\n  function handleClick(event) {\n    //alert('clicked');\n   // //console.log(\"botonera run=\",run);\n    if(run){\n    setRun(false) } else {setRun(true)}\n    \n     event.preventDefault();\n    event.stopPropagation(); \n  }\n\n\n\n  return (\n            <Fondo>\n                {/* <p>You clicked {counter} times</p> */}\n                \n                  \n                 \n                 {/*  <button onClick={(e) => setCounter(0)}>Inicio</button> \n                 \n                 <button onClick={() => setCounter(counter+1)}>Adelante</button>\n                 <button onClick={() => setCounter(counter-1)}>Atras</button> */}\n\n                 <button onClick={handleClick}>{run?\"Parar\":\"Automático\"}</button>\n\n                \n            </Fondo>\n        );\n        //console.log(\"counter en botonera=\",counter);\n   }\n\n\n\n\n \nif (!source) { return <div></div>; }\nelse {\nconst src = source;\n//setArchivo(source);\n  return (<>\n\n                      <Card>\n                 \n                         { IsVideo && <IconoReco><IconoVideo360 /></IconoReco>}\n                         { IsRecorrido && <IconoReco><IconoRecorrido /></IconoReco>}\n                         {IsImagen &&  <IconoReco><IconoAerea /></IconoReco>}\n                       \n                        <CardHeader>\n                                { IsVideo && <VideoPlayer { ...videoJsOptions }/> }\n\n                                { IsRecorrido &&\n                              \n                                    <div>\n                                        <iframe id=\"mipannellum\" title=\"recorrido\"  width=\"100%\" allowFullScreen src={src}/>\n                                        <Botonera/>\n                                    </div>\n                                  }\n                                {IsImagen && <img src={source?source:sourceInicial} width=\"100%\" alt={ImageAlt} />}\n                        \n                        </CardHeader>\n                        {!IsPlano && <>\n                              <CardCompany>{Titulo}</CardCompany>\n                              <CardType>{Bajada}</CardType>\n                              <CardTitle>{SubTitulo}</CardTitle>\n                              <CardMeta>\n                                <CardMetaFeature>{TextoGrisMayuscula}</CardMetaFeature>\n                              </CardMeta></>\n                        }\n                     \n                      </Card>  \n                     \n                       \n\n          \n     </> )\n}\n};\n\nexport default FrameBase;\n\n\n/* var pano = document.getElementById('pano').contentWindow; \nvar pitch = pano.config.pitch; \nvar yaw = pano.config.yaw; \nvar scene = pano.config.activeScene; \n\nwill allow you to read values; after changing a value \n(except activeScene), \nrun pano.animate(); */"]},"metadata":{},"sourceType":"module"}